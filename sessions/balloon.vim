" ~/.vim/sessions/balloon.vim:
" Vim session script.
" Created by session.vim 2.6.1 on 28 October 2014 at 07:27:59.
" Open this file in Vim and run :source % to restore your session.

set guioptions=aegimrLt
silent! set guifont=Ubuntu\ Mono\ 15
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'molokai' | colorscheme molokai | endif
call setqflist([{'lnum': 108, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': '    var layoutPath = pathHelper.join(templatesPath, ''layout.html'');'}, {'lnum': 108, 'col': 54, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': '    var layoutPath = pathHelper.join(templatesPath, ''layout.html'');'}, {'lnum': 165, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': '            renderPage(layoutPath, p, ctx, function (err, html) {'}, {'lnum': 331, 'col': 22, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': 'function renderPage (layoutPath, pagePath, context, callback) {'}, {'lnum': 340, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': '            var html = swig.render(readFile(layoutPath), { locals: context });'}, {'lnum': 344, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': 'lib/app.js', 'text': '        callback(null, swig.render(readFile(layoutPath), { locals: context }));'}])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Workspace/balloon
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +22 lib/app.js
badd +2 package.json
silent! argdel *
edit lib/app.js
set splitbelow splitright
set nosplitright
wincmd t
set winheight=1 winwidth=1
" argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=4
setlocal fml=1
setlocal fdn=20
setlocal fen
55
silent! normal! zo
77
silent! normal! zo
95
silent! normal! zo
112
silent! normal! zo
164
silent! normal! zo
189
silent! normal! zo
233
silent! normal! zo
275
silent! normal! zo
318
silent! normal! zo
331
silent! normal! zo
348
silent! normal! zo
351
silent! normal! zo
318
silent! normal! zo
331
silent! normal! zo
348
silent! normal! zo
351
silent! normal! zo
let s:l = 25 - ((24 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
25
normal! 0
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
